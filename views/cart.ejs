<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head') %>
    <title>Solomons Honey | Shop </title>
</head>
<body>
    <header class="header-minor">
        <%- include('./partials/nav') %>
        <div class="hero-grid grid">
            <div class="hero">
                <h3 class="caption">shop</h3>
                <h1 class="title">My Cart</h1>
            </div>
        </div>
    </header>

    <section id="cart" class="grid">
        <div class="container">
            <!--Renders warning box if no items are in cart-->
            <div class="alert-box no-Items">
                <p class="alert-box-text">You have no Items in cart, <a href="/shop">return to shop</a></p>
            </div>

            <!--Cart tems are rendered here after iteration-->
            <div class="cart-grid">
                
            </div>
            
            <!--Hides checkout button if no items are in cart-->
            <% if (cartTotalItems > 0) { %>
            <div class="cart-total">
                <div class="cart-total-txt">
                    <p>Total</p>
                    <h2 class="sub-title">Ksh. <span class="total">0</span></h2>
                </div>
                    
                <div class="cart-total-controls">
                    <a class="btn cta" href="/checkout">Checkout</a>
                </div>
            </div>
            <% } %>

        </div>
    </section>

    <%- include('./partials/footer') %>

    <!--scripts-->
    <%- include('./partials/scripts'); %>
    <script>
        let cartGrid = document.querySelector('.cart-grid');
        
        async function cartTotal(){
            let total = 0;
            let cartItems = Array.from(document.querySelectorAll('.cart-item'));
            cartItems.forEach(cartItem => {
                let unitPrice = cartItem.children[0].children[0].children[1].children[0].innerHTML;
                let quantity = cartItem.children[0].children[1].children[0].children[1].innerHTML;
                total = total + (unitPrice*quantity);
            })
            document.querySelector('.total').innerHTML = total;
        }
        let noOfCartItems2 = async ()=>{
            let cartItems = Array.from(document.querySelectorAll('.cart-item'));
            if(!cartItems.length){
                navCartTotal.innerHTML = 0;
            }else{
                navCartTotal.innerHTML = cartItems.length;
            }
        }
        async function loadCart(e){
            let url = '/getCartItems';
            let response = await fetch(url);
            let data = await response.json();

            if(data.cartItems == 0){
                alertToggle();
            }

            data.cartItems.forEach(cartItem => {
                let item = `
                    <div class="cart-item-txt">
                        <div class="cart-item-txt-about">
                            <p>${cartItem.Title}</p>
                            <h2 class="sub-title">Ksh. <span class="price">${cartItem.Unit_Price}</span></h2>
                        </div>
                            
                        <div class="card-item-txt-controls">
                            <div class="quantity">
                                <button class="cta" onclick="decrementCartItem('${cartItem.Id}', this)">-</button><span class="quantityNumber">${cartItem.Quantity}</span><button class="cta" onclick="incrementCartItem('${cartItem.Id}', this)">+</button>
                            </div>
                            <button class="btn cta" onclick="removeFromCart('${cartItem.Id}')">Remove</button>
                        </div>
                    </div>            
                `;
                cartItemm = document.createElement("div");
                cartGrid.appendChild(cartItemm);
                cartItemm.classList.add('cart-item');
                cartItemm.innerHTML = item;
                cartTotal();
                noOfCartItems2();
            });
        }

        let removeFromCart = async (itemId) => {
            let url = '/removeFromCart';
            let data = { itemId };
            let response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                mode: 'same-origin',
                body: JSON.stringify(data)
            });
            let res = await response.json();
            let itemName = res.rowTitle;
            let cartItems = Array.from(document.querySelectorAll('.cart-item'));
            cartItems.forEach(cartItem => {
                if(cartItem.children[0].children[0].children[0].innerHTML == itemName){
                    // removes node
                    cartItem.remove();
                }
            })

            // if no item left in cart, display alert box and hide checkout button
            let newCartItems = Array.from(document.querySelectorAll('.cart-item'))
            if(newCartItems.length == 0 ){
                alertToggle()
                document.querySelector('.cart-total-controls').style.display = 'none'
            }
            console.log(res);
            await cartTotal();
            await noOfCartItems2();
        }

        let decrementCartItem = async(itemId, thise) => {
            if(thise.nextSibling.innerHTML == '1'){
                let data = {
                    msg: 'Item is already 1'
                }
                console.log(JSON.stringify(data));
            }else{
                let url = '/decrementCartItem';
                let data = { itemId }
                let options = {
                    method: 'POST',
                    mode: 'same-origin',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                }
                let response = await fetch(url, options);
                let res = await response.json();
                console.log(res);
                thise.nextSibling.innerHTML = res.newQuantity;
                await cartTotal();
                await noOfCartItems2();
            }
        }

        let incrementCartItem = async(itemId, thise) => { 
            let url = '/incrementCartItem';
            let data = { itemId }
            let options = {
                method: 'POST',
                mode: 'same-origin',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }
            let response = await fetch(url, options);
            let res = await response.json();
            console.log(res);
            thise.previousSibling.innerHTML = res.newQuantity;
            await cartTotal();
            await noOfCartItems2();
        }

        loadCart();
    </script>
</body>
</html>